@use "/styles/_mixins" as mixins;
@use "/styles/_variables" as variables;
$borderThickness: 7.5em;

#videoContainer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  background-color: black;
  overflow: hidden;
  position: fixed;

  #videoOverlay {
    @include mixins.articlePageGradientShadow;
    width: 100%;
    height: 200%;
    position: fixed;
    bottom: 0;
    background-color: white;
    mix-blend-mode: multiply;
  }

  video {
    width: 100%;
    height: 100%;
    background-color: black;
    z-index: -2;
    object-fit: cover;
  }
}

.videoHeader {
  width: 100%;
  height: 90vh;
  margin-bottom: 45vh;
  padding-bottom: 10vh;
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  font-size: 1em;
  perspective: 10cm;
  filter: drop-shadow(0 0 0.1em rgba(0, 0, 0, 0.5));

  .spaceContainer {
    width: 60em;
    height: 25em;
    margin-bottom: -10.5em;
    position: absolute;
    filter: drop-shadow(0 0 0.1em var(--article-colour-space))
      drop-shadow(0 0 0.25em var(--article-colour-space)) brightness(1.5);

    .space {
      @include mixins.articlePageSpaceCutout();
      width: 100%;
      height: 100%;
      mask: url("/videoHeaderTear.webp");
      mask-position: center top;
      mask-size: 100% 100%;
    }
  }

  .bar {
    height: $borderThickness;
    border-top: variables.$borderThinBlack;
    border-bottom: variables.$borderThinBlack;
    margin-left: -0.5em;
    padding-left: 0.5em;
    position: absolute;
    transform-origin: left center;

    &::before {
      @include mixins.gridPatternLight();
      width: 100%;
      height: 100%;
      position: absolute;
      background-size: 10%;
      mask: linear-gradient(45deg, black 0%, transparent 25%);
      content: "";
    }

    &.light {
      width: 85%;
      background-color: variables.$lightGray;
      transform: rotateY(5deg) rotateZ(2deg) translateY(-0.5em);
      mask: linear-gradient(
        45deg,
        black calc(100% - 14.25em),
        variables.$gradientFade calc(100% - 14.25em),
        variables.$gradientFade calc(100% - 12.5em),
        black calc(100% - 12.5em),
        black calc(100% - 10.75em),
        variables.$gradientFade calc(100% - 10.75em),
        variables.$gradientFade calc(100% - 9em),
        black calc(100% - 9em),
        black calc(100% - 5.5em),
        transparent calc(100% - 5.5em)
      );
    }

    &.dark {
      width: 87.5%;
      background-color: variables.$darkGray;
      transform: rotateY(5deg) rotateZ(2deg) translateY(1em);
      mask: linear-gradient(
        -45deg,
        transparent 7.5%,
        black 7.5%,
        black calc(7.5% + 5em),
        variables.$gradientFade calc(7.5% + 5em),
        variables.$gradientFade calc(7.5% + 6.75em),
        black calc(7.5% + 6.75em),
        black calc(7.5% + 8.5em),
        variables.$gradientFade calc(7.5% + 8.5em),
        variables.$gradientFade calc(7.5% + 10.25em),
        black calc(7.5% + 10.25em)
      );

      &::before {
        @include mixins.gridPatternDark();
        background-size: 10%;
        mask: linear-gradient(
          -45deg,
          transparent 7.5%,
          black 7.5%,
          transparent 15%
        );
      }
    }
  }

  .glow {
    @include mixins.articlePageGradientShadow;
    width: calc(86.6% + 0.25em);
    height: $borderThickness;
    border: none;
    position: absolute;
    background-color: transparent;
    transform-origin: left center;
    transform: rotateY(5deg) rotateZ(2deg);
    mask: linear-gradient(
      45deg,
      black calc(100% - 6em),
      transparent calc(100% - 6em)
    );
  }

  h1 {
    @include mixins.russoFont();
    width: 65%;
    max-width: 65%;
    height: 3em;
    margin-left: 0.5em;
    display: flex;
    align-items: center;
    position: absolute;
    font-size: 3em;
    color: variables.$secondaryText;
    text-rendering: geometricPrecision;
    transform-origin: left center;
    transform: rotateY(5deg) rotateZ(2deg) translateY(0.75em);

    &::selection {
      color: variables.$lightGray;
      background-color: var(--article-colour);
    }
  }

  .infoContainer {
    width: 83.5%;
    position: absolute;
    transform-origin: left center;
    transform: rotateY(5deg) rotateZ(2deg) translateY(6.5em);
  }
}

@use "/styles/_mixins" as mixins;
@use "/styles/_variables" as variables;

.dialogue {
  width: 100%;
  height: 14em;
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  margin-bottom: 1.5em;
  font-size: 1em;
  color: variables.$lightGray;
  perspective: 0cm;

  &::before {
    @include mixins.articlePageGradientShadow;
    width: 100%;
    height: 0.15em;
    position: absolute;
    margin-bottom: -0.15em;
    z-index: -1;
    content: "";
  }

  .spaceContainer {
    width: 100%;
    height: 75%;
    position: absolute;
    z-index: -2;
    filter: drop-shadow(0 0 0.1em var(--article-colour-space))
      drop-shadow(0 0 0.25em var(--article-colour-space)) brightness(1.5);

    .space {
      @include mixins.articlePageSpaceCutout();
      width: 100%;
      height: 100%;
      mask: url("/dialogueTear.png");
      mask-position: center top;
      mask-size: 100%;
    }
  }

  img {
    width: fit-content;
    height: 100%;
    position: absolute;
    left: 0;
    z-index: 0;
    object-fit: contain;
    image-rendering: pixelated;
  }

  .textBox {
    width: 100%;
    height: 4.3em;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    border-top: 0.1em solid variables.$lightGray;
    border-bottom: 0.1em solid variables.$lightGray;
    font-size: 0.9em;
    color: variables.$primaryText;
    background-color: variables.$dialogueBoxBackgroundColour;
    perspective: 0cm;
    z-index: 1;

    &::before {
      @include mixins.gridPatternDark;
      width: 100%;
      height: 4.3em;
      position: absolute;
      opacity: 0.15;
      z-index: -1;
      mask: linear-gradient(
        0deg,
        black 0%,
        transparent 15%,
        transparent 85%,
        black 100%
      );
      content: "";
    }

    p {
      @include mixins.darkScrollBar;
      width: calc(100% - 0.6em);
      height: 100%;
      margin: 0;
      padding: 0.3em;
      overflow-y: scroll;
    }
  }

  h3 {
    @include mixins.russoFont;
    height: 1.2em;
    position: absolute;
    margin-bottom: -1.2em;
    padding-left: 1em;
    padding-right: 4em;
    font-size: 1em;
    color: variables.$darkGray;
    background-image: linear-gradient(
      -45deg,
      transparent calc(0% + 2em),
      variables.$lightGray calc(0% + 2em)
    );

    &::before {
      @include mixins.articlePageGradientShadow;
      width: calc(100% + 0.05em);
      height: calc(100% + 0.15em);
      position: absolute;
      left: 0;
      z-index: -1;
      mask: linear-gradient(
        -45deg,
        transparent calc(0% + 2em),
        black calc(0% + 2em)
      );
      content: "";
    }
  }

  &.invert {
    justify-content: flex-end;

    img {
      left: unset;
      right: 0;
    }

    .textBox {
      p {
        text-align: right;
      }
    }

    h3 {
      padding-left: 4em;
      padding-right: 1em;
      text-align: right;
      background-image: linear-gradient(
        45deg,
        transparent calc(0% + 2em),
        variables.$lightGray calc(0% + 2em)
      );

      &::before {
        left: unset;
        right: 0;
        mask: linear-gradient(
          45deg,
          transparent calc(0% + 2em),
          black calc(0% + 2em)
        );
      }
    }
  }
}

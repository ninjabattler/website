@use "/styles/_mixins" as mixins;
@use "/styles/_variables" as variables;

#likePanel {
  width: calc(100% - 0.2em);
  min-height: 1.5em;
  margin-bottom: 0.5em;
  border-left: 0.1em solid variables.$lightGray;
  border-right: 0.1em solid variables.$lightGray;
  display: flex;
  justify-content: space-between;
  background-color: variables.$darkGray;
  overflow: hidden;

  button {
    @include mixins.russoFont;
    min-width: 20%;
    padding-left: 0.05em;
    padding-right: 0.05em;
    border: none;
    outline: none;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 1em;
    color: variables.$primaryText;
    background: none;
    z-index: 1;
    cursor: pointer;

    * {
      margin: 0.2em;
    }

    .amount {
      font-size: 0.5em;
    }

    .likeIcon {
      font-size: 1em;
      overflow: visible;
      transition:
        color 0.3s,
        filter 0.3s;

      path {
        stroke-width: 0px;
        transition:
          stroke-width 0.3s,
          filter 0.3s,
          opacity 0.3s;
      }

      &.glow {
        position: absolute;
        color: transparent;
        z-index: -1;

        path {
          opacity: 0;
          stroke: var(--article-colour) !important;
          stroke-width: 1px;
          filter: drop-shadow(0 0 0.02em var(--article-colour2));
          transform-origin: center;
          animation: likeHoverGlow 1s infinite linear;
        }
      }
    }

    &.dislike {
      justify-content: flex-end !important;

      .glow {
        path {
          animation: dislikeHoverGlow 1s infinite linear;
        }
      }
    }

    &:hover {
      .likeIcon {
        animation: likeHover 2s infinite linear;
        filter: brightness(1.2);

        path {
          opacity: 1;
          stroke: var(--article-colour) !important;
          stroke-width: 1px;
        }
      }
    }

    &:active {
      .likeIcon {
        color: var(--article-colour);
        animation: likeActive 2s infinite linear;

        path {
          stroke: var(--article-colour) !important;
          stroke-width: 1px;
        }

        &.glow {
          color: transparent;

          path {
            animation: likeActiveGlow 0.75s infinite linear;
          }
        }
      }

      &.dislike {
        .likeIcon {
          animation: dislikeActive 2s infinite linear;

          &.glow {
            path {
              animation: dislikeActiveGlow 0.75s infinite linear;
            }
          }
        }
      }
    }

    &.selected {
      .likeIcon:not(.glow) {
        color: var(--article-colour);
      }
    }
  }

  #likeBar {
    width: 100%;
    height: 20%;
    margin-top: auto;
    margin-bottom: auto;
    background-color: variables.$lightGray;
    mask: linear-gradient(
      -45deg,
      transparent 0%,
      black 0%,
      black calc(10% - 0.025em),
      transparent calc(10% - 0.025em),
      transparent calc(10% + 0.025em),
      black calc(10% + 0.025em),
      black calc(20% - 0.025em),
      transparent calc(20% - 0.025em),
      transparent calc(20% + 0.025em),
      black calc(20% + 0.025em),
      black calc(30% - 0.025em),
      transparent calc(30% - 0.025em),
      transparent calc(30% + 0.025em),
      black calc(30% + 0.025em),
      black calc(40% - 0.025em),
      transparent calc(40% - 0.025em),
      transparent calc(40% + 0.025em),
      black calc(40% + 0.025em),
      black calc(50% - 0.025em),
      transparent calc(50% - 0.025em),
      transparent calc(50% + 0.025em),
      black calc(50% + 0.025em),
      black calc(60% - 0.025em),
      transparent calc(60% - 0.025em),
      transparent calc(60% + 0.025em),
      black calc(60% + 0.025em),
      black calc(70% - 0.025em),
      transparent calc(70% - 0.025em),
      transparent calc(70% + 0.025em),
      black calc(70% + 0.025em),
      black calc(80% - 0.025em),
      transparent calc(80% - 0.025em),
      transparent calc(80% + 0.025em),
      black calc(80% + 0.025em),
      black calc(90% - 0.025em),
      transparent calc(90% - 0.025em),
      transparent calc(90% + 0.025em),
      black calc(90% + 0.025em),
      black 100%,
      transparent 100%
    );

    .bar {
      @include mixins.articlePageGradientShadow;
      width: 100%;
      height: 100%;
    }
  }

  &::before {
    @include mixins.gridPatternDark;
    width: calc(100% - 0.2em);
    height: 1.5em;
    position: absolute;
    mask: linear-gradient(
      90deg,
      black 0%,
      transparent 15%,
      transparent 85%,
      black 100%
    );
    content: "";
  }
}

@keyframes likeHover {
  0% {
    transform: translateY(0%);
  }
  25% {
    transform: translateY(-10%);
  }
  50% {
    transform: translateY(0%);
  }
  75% {
    transform: translateY(10%);
  }
  100% {
    transform: translateY(0%);
  }
}

@keyframes likeHoverGlow {
  0% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(-0%) scale(1);
    filter: brightness(1) blur(0);
  }
  50% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(-12.5%) scale(1.025);
    filter: brightness(1.5) blur(0);
  }
  100% {
    stroke-opacity: 0;
    stroke-width: 0px;
    transform: translateY(-25%) scale(1.05);
    filter: brightness(2) blur(0.035em);
  }
}

@keyframes likeActive {
  0% {
    transform: translateY(-20%) scale(1.1);
    filter: brightness(1.2) drop-shadow(0 0 0.1em var(--article-colour2));
  }
  25% {
    transform: translateY(-30%) scale(1.25);
    filter: brightness(1.75) drop-shadow(0 0 0.15em var(--article-colour2));
  }
  50% {
    transform: translateY(-20%) scale(1.1);
    filter: brightness(1.2) drop-shadow(0 0 0.1em var(--article-colour2));
  }
  75% {
    transform: translateY(-30%) scale(1.25);
    filter: brightness(1.75) drop-shadow(0 0 0.15em var(--article-colour2));
  }
  100% {
    transform: translateY(-20%) scale(1.1);
    filter: brightness(1.2) drop-shadow(0 0 0.1em var(--article-colour2));
  }
}

@keyframes likeActiveGlow {
  0% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(0%);
    filter: brightness(1) blur(0);
  }
  50% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(-25%);
    filter: brightness(1.5) blur(0);
  }
  100% {
    stroke-opacity: 0;
    stroke-width: 0px;
    transform: translateY(-50%);
    filter: brightness(2) blur(0.035em);
  }
}

@keyframes dislikeActive {
  0% {
    transform: translateY(20%) scale(1.1);
    filter: brightness(1.2);
  }
  25% {
    transform: translateY(30%) scale(1.25);
    filter: brightness(1.75);
  }
  50% {
    transform: translateY(20%) scale(1.1);
    filter: brightness(1.2);
  }
  75% {
    transform: translateY(30%) scale(1.25);
    filter: brightness(1.75);
  }
  100% {
    transform: translateY(20%) scale(1.1);
    filter: brightness(1.2);
  }
}

@keyframes dislikeHoverGlow {
  0% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(0%) scale(1);
    filter: brightness(1) blur(0);
  }
  50% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(12.5%) scale(1.025);
    filter: brightness(1.5) blur(0);
  }
  100% {
    stroke-opacity: 0;
    stroke-width: 0px;
    transform: translateY(25%) scale(1.05);
    filter: brightness(2) blur(0.035em);
  }
}

@keyframes dislikeActiveGlow {
  0% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(0%);
    filter: brightness(1) blur(0);
  }
  50% {
    stroke-opacity: 1;
    stroke-width: 1px;
    transform: translateY(-25%);
    filter: brightness(1.5) blur(0);
  }
  100% {
    stroke-opacity: 0;
    stroke-width: 0px;
    transform: translateY(-50%);
    filter: brightness(2) blur(0.035em);
  }
}
